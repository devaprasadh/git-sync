docker_image: &docker_image
  docker:
    - image: cimg/openjdk:11.0
      auth:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
    
resource_class: &resource_class    
  resource_class: small
  
work_directory: &work_directory
  working_directory: ~/git-sync
  
executors:
  docker-executor:
    <<: *docker_image
    <<: *resource_class
    <<: *work_directory  
  
version: 2.1
jobs:
  test:
    executor: docker-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/git-sync
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: |
          git clone --depth=1 --branch=master https://github.com/devatherock/gradle-includes.git ../gradle-includes
          sh unit-tests.sh
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - store_artifacts:
          path: build/reports/jacoco
      - store_test_results:
          path: build/test-results

  groovy_script_to_jar:
    docker:
      - image: devatherock/drone-groovy-script-to-jar:0.6.2
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    <<: *work_directory
    environment:
      PLUGIN_SCRIPT_PATH: SyncGitRepos.groovy
    steps:
      - checkout
      - run: sh /scripts/entry-point.sh
      - persist_to_workspace:
          root: ~/git-sync
          paths:
            - SyncGitRepos.jar
            
  docker_build_dry_run_circle:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/git-sync
      - run: docker build -f docker/CircleCI.Dockerfile .
  docker_build_dry_run_drone:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/git-sync
      - run: docker build -f docker/Drone.Dockerfile .
  docker_build_dry_run_vela:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/git-sync
      - run: docker build -f docker/Vela.Dockerfile .
      
  publish_circle:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/git-sync
      - run: |
          TAG=${CIRCLE_SHA1:0:8}
          docker build -t devatherock/git-sync:$TAG -f docker/CircleCI.Dockerfile .
          docker tag devatherock/git-sync:$TAG devatherock/git-sync:latest
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push devatherock/git-sync:$TAG
          docker push devatherock/git-sync:latest
  publish_drone:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/git-sync
      - run: |
          TAG=${CIRCLE_SHA1:0:8}
          docker build -t devatherock/drone-git-sync:$TAG -f docker/Drone.Dockerfile .
          docker tag devatherock/drone-git-sync:$TAG devatherock/drone-git-sync:latest
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push devatherock/drone-git-sync:$TAG
          docker push devatherock/drone-git-sync:latest
  publish_vela:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/git-sync
      - run: |
          TAG=${CIRCLE_SHA1:0:8}
          docker build -t devatherock/vela-git-sync:$TAG -f docker/Vela.Dockerfile .
          docker tag devatherock/vela-git-sync:$TAG devatherock/vela-git-sync:latest 
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push devatherock/vela-git-sync:$TAG
          docker push devatherock/vela-git-sync:latest
          
  notify:
    docker:
      - image: devatherock/simple-slack:0.4.0
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    environment:
      TEXT: "Success: {{.CircleBuildUrl}} by {{.CircleUsername}}"
      COLOR: "#33ad7f"
      CHANNEL: general
      TITLE: "Build completed"
    steps:
      - run: /bin/simpleslack

workflows:
  version: 2.1
  build_publish:
    jobs:
      - test:
          context:
            - docker-credentials
          filters:
            branches:
              only: master
      - groovy_script_to_jar:
          context:
            - docker-credentials
          filters:
            branches:
              only: master
          requires:
            - test
      - publish_circle:
          context:
            - docker-credentials
          requires:
            - groovy_script_to_jar
      - publish_drone:
          context:
            - docker-credentials
          requires:
            - groovy_script_to_jar
      - publish_vela:
          context:
            - docker-credentials
          requires:
            - groovy_script_to_jar
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - publish_circle
            - publish_drone
            - publish_vela
  pr_check:
    jobs:
      - test:
          context:
            - docker-credentials
          filters:
            branches:
              ignore: master
      - groovy_script_to_jar:
          context:
            - docker-credentials
          filters:
            branches:
              ignore: master
          requires:
            - test    
      - docker_build_dry_run_circle:
          context:
            - docker-credentials
          requires:
            - groovy_script_to_jar
      - docker_build_dry_run_drone:
          context:
            - docker-credentials
          requires:
            - groovy_script_to_jar
      - docker_build_dry_run_vela:
          context:
            - docker-credentials
          requires:
            - groovy_script_to_jar
